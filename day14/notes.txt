{ 69 => 0, 65 => 1, 64 => 2 }

600 = 0
601 = 1
602 = 2
603 = 0

1000000000 = ?

Math.floor(1000000000 / 600) * 600 = closest to 1000000000 and is 0
if (is 1000000000) return 0
else 
check next, return 1
check next, return 2


11 = 0
12 = 1
13 = 2
11 = 0

100 / 11 * 11 = 99

100064 correct

[
  64, 65, 63, 68, 69, 69, 65, 64, 65, 63, 68, 69,
  69, 65, 64, 65, 63, 68, 69, 69, 65, 64, 65, 63,
  68, 69, 69, 65, 64, 65, 63, 68, 69, 69, 65, 64,
  65, 63, 68, 69, 69, 65, 64, 65, 63, 68, 69, 69,
  65, 64, 65, 63, 68, 69, 69, 65, 64, 65, 63, 68,
  69, 69, 65, 64, 65, 63, 68, 69, 69, 65, 64, 65,
  63, 68, 69, 69, 65, 64, 65, 63, 68, 69, 69, 65,
  64, 65, 63, 68, 69, 69, 65, 64, 65, 63, 68, 69,
  69, 65, 64, 65
]

1000 = 64 -> cycle start
1001 = 65
1002 = 63
1003 = 68
1004 = 69
1005 = 69
1006 = 65 -> cycle end
1007 = 64 -> cycle start
1008 = 65
1009 = 63
1010 = 68
1011 = 69
1012 = 0
